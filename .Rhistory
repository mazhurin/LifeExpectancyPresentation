---
title: "GreyMemory music"
author: "Anton Mazhurin"
date: "November 13, 2015"
output: html_document
---
#XDM parameters
* Window size = 9
* Number of songs = 100
```{r}
accuracy_duration <- read.csv('accuracy0.csv', header = FALSE)
accuracy_offset <- read.csv('accuracy1.csv', header = FALSE)
accuracy_pitch <- read.csv('accuracy2.csv', header = FALSE)
```
#Duration
```{r, echo=FALSE}
plot(log(accuracy_duration[,2]), accuracy_duration[,4], xlab = "Log of Signal to Noise Ratio", ylab = "Accuracy, %", main = "Duration + noise", type = "b")
library(MASS)
head(shuttle)
?shuttle
glm(shuttle$use ~ shuttle$wind, family = "binominal")
glm(shuttle$use ~ shuttle$wind, family = "binomial")
glm(shuttle$use ~ shuttle$wind + shuttle$magn, family = "binomial")
?InsectSprays
head(InsectSprays)
glm(InsectSprays$count ~ factor(InsectSprays$spray), model = "poissone")
?glm
glm(InsectSprays$count ~ factor(InsectSprays$spray), family = "poisson")
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
install.packages('AppliedPredictiveModelling')
data(segmentationOriginal)
install.packages("devtools")
devtools::install_git('rstudio/shinyapps')
devtools::install_github('rstudio/shinyapps')
install.packages("digest")
install.packages("digest")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(name='greymemory', token='63880790610A8A58BCDB7FD2D6F3959B', secret='E1+aYKKMx7i2zGarE9kPKYDVIY9yznIWSNScAgrz')
data(mtcars)
summary(mtcars)
head(mtcars)
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot()
library(ggplot2)
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot()
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(      # Histogram with density instead of count on y-axis
binwidth=.5,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(binwidth=4, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(binwidth=2, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(binwidth=1, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) + geom_density()
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(binwidth=1, colour="black", fill="white") +
geom_density(binwidth = 1, alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(binwidth=1, colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")
ggplot(mtcars, aes(x=mpg)) +
geom_histogram(binwidth=1, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) +  geom_histogram(binwidth=2, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) + geom_density()
mean_auto = mean(mtcars[mtcars$am == "Automatic",])
mean_auto = mean(mtcars[mtcars$am == 0,])
mean_auto <- mean(mtcars[,mtcars$am == 0])
aggregate(mpg~am, data = mtcars, mean)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
t.test(autoData$mpg, manualData$mpg)
autoData
autoData <- mtcars[mtcars$am == 0,]
manualData <- mtcars[mtcars$am == 1,]
t.test(autoData$mpg, manualData$mpg)
data(mtcars)
mtcars$cyl<-relevel(as.factor(mtcars$cyl), ref='8')
mtcars$vs<-relevel(as.factor(mtcars$vs), ref='0')
mtcars$am<-relevel(as.factor(mtcars$am), ref='0',labels=c('Automatic','Manual'))
mtcars$gear<-relevel(as.factor(mtcars$gear), ref='3')
mtcars$carb<-relevel(as.factor(mtcars$carb), ref='2')
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot()
ggplot(mtcars, aes(x=mpg)) +  geom_histogram(binwidth=2, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) + geom_density()
aggregate(mpg~am, data = mtcars, mean)
autoData <- mtcars[mtcars$am == 0,]
manualData <- mtcars[mtcars$am == 1,]
t.test(autoData$mpg, manualData$mpg)
fit_all <- lm(mpg~., data = mtcars)
summary(fit_all)
autoData <- mtcars[mtcars$am == 0,]
manualData <- mtcars[mtcars$am == 1,]
t.test(autoData$mpg, manualData$mpg)
data(mtcars)
mtcars$cyl<-relevel(as.factor(mtcars$cyl), ref='8')
mtcars$vs<-relevel(as.factor(mtcars$vs), ref='0')
mtcars$am<-relevel(as.factor(mtcars$am,labels=c('Automatic','Manual')), ref='0')
mtcars$gear<-relevel(as.factor(mtcars$gear), ref='3')
mtcars$carb<-relevel(as.factor(mtcars$carb), ref='2')
mtcars$cyl<-relevel(as.factor(mtcars$cyl), ref='8')
mtcars$vs<-relevel(as.factor(mtcars$vs), ref='0')
mtcars$am<-relevel(as.factor(mtcars$am), ref='0',labels=c('Automatic','Manual'))
mtcars$gear<-relevel(as.factor(mtcars$gear), ref='3')
mtcars$carb<-relevel(as.factor(mtcars$carb), ref='2')
head(mtcars)
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot()
mtcars$am
data(mtcars)
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
mtcars$vs <- factor(mtcars$vs)
mtcars$carb <-factor(mtcars$carb)
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot()
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot()
ggplot(mtcars, aes(x=mpg)) +  geom_histogram(binwidth=2, colour="black", fill="white")
ggplot(mtcars, aes(x=mpg)) + geom_density()
aggregate(mpg~am, data = mtcars, mean)
autoData <- mtcars[mtcars$am == 0,]
manualData <- mtcars[mtcars$am == 1,]
t.test(autoData$mpg, manualData$mpg)
autoData <- mtcars[mtcars$am == 0,]
manualData <- mtcars[mtcars$am == 1,]
t.test(autoData$mpg, manualData$mpg)
autoData
data(mtcars)
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
mtcars$vs <- factor(mtcars$vs)
mtcars$carb <-factor(mtcars$carb)
autoData <- mtcars[mtcars$am == 0,]
manualData <- mtcars[mtcars$am == 1,]
t.test(autoData$mpg, manualData$mpg)
head(mtcars)
fit_all <- lm(mpg~., data = mtcars)
summary(fit_all)
data(mtcars)
head(mtcars)
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
mtcars$vs <- factor(mtcars$vs)
mtcars$carb <-factor(mtcars$carb)
fit_all <- lm(mpg~., data = mtcars)
summary(fit_all)
sort(cor(mtcars)[1,])
data(mtcars)
sort(cor(mtcars)[1,])
head(mtcars)
data(mtcars)
mtcars$gear <- as.factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- as.factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- as.factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
mtcars$vs <- as.factor(mtcars$vs)
mtcars$carb <- as.factor(mtcars$carb)
data(mtcars)
mtcars$cyl<-relevel(as.factor(mtcars$cyl))
mtcars$vs<-relevel(as.factor(mtcars$vs))
mtcars$am<-relevel(as.factor(mtcars$am), ref='0',labels=c('Automatic','Manual'))
mtcars$gear<-relevel(as.factor(mtcars$gear))
mtcars$carb<-relevel(as.factor(mtcars$carb))
mtcars$cyl<-relevel(as.factor(mtcars$cyl), ref='8')
mtcars$vs<-relevel(as.factor(mtcars$vs), ref='0')
mtcars$am<-relevel(as.factor(mtcars$am), ref='0',labels=c('Automatic','Manual'))
mtcars$gear<-relevel(as.factor(mtcars$gear), ref='3')
mtcars$carb<-relevel(as.factor(mtcars$carb), ref='2')
sort(cor(mtcars)[1,])
sort(cor(mtcars)[1,])
ft2<-step(fit_all,direction ="both")
ft2$coefficients
fit_all <- lm(mpg~., data = mtcars)
summary(fit_all)
ft2<-step(fit_all,direction ="both")
ft2$coefficients
summary(fit2)
fit2<-step(fit_all,direction ="both")
fit2$coefficients
summary(fit2)
summary(fit_all)
summary(fit_all)
summary(fit2)
fit2$coefficients
data(mtcars)
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),	labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8), labels=c("4cyl","6cyl","8cyl"))
mtcars$vs <- factor(mtcars$vs)
mtcars$carb <-factor(mtcars$carb)
fit_all <- lm(mpg~., data = mtcars)
summary(fit_all)
fit2<-step(fit_all,direction ="both")
summary(fit2)
fit2$coefficients
par(mfrow=c(2,2))
plot(modelB, main="Fig. 4")
par(mfrow=c(2,2))
plot(fit2, main="Fig. 4")
```
install.packages('pdflatex')
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot() + ggtitle("MPG Distribution of cars with Manual and Automatic transmision")
library(ggplot2)
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot() + ggtitle("MPG Distribution of cars with Manual and Automatic transmision")
ggplot(aes(y = mpg, x = am, fill = am), data = mtcars) + geom_boxplot() + ggtitle("Fig 1. MPG Distribution of cars with Manual and Automatic transmision")
fit_all <- lm(mpg~., data = mtcars)
summary(fit_all)
fit_all$residuals
fit_all
summary(fit_all)
setwd("C:/Users/mindmick/coursera/LifeExpectancyPresentation")
library(slidify)
publish(user = "mazhurin", repo = "LifeExpectancyCalculatorPresentation")
publish(user = "mazhurin", repo = "LifeExpectancyCalculatorPresentation")
